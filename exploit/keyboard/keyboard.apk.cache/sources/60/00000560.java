package com.mobisec.keyboard;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Environment;
import android.support.v4.view.ViewCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Enumeration;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/* loaded from: classes2.dex */
public class MainActivity extends AppCompatActivity {
    private static boolean DEFAULT_DEBUG_MODE = false;
    private static String MY_PREFS_NAME = "KeyboardPrefs";
    private static String GLOBAL_PREFS_NAME = "GlobalKeyboardPrefs";
    private static String INFO_PREFS_NAME = "InfoKeyboardPrefs";

    private void setFlag(Intent intent) {
        String flag;
        if (intent != null) {
            flag = intent.getStringExtra("flag");
            if (flag == null) {
                flag = "dummyflag";
            }
        } else {
            flag = "dummyflag";
        }
        if (flag != null) {
            SharedPreferences.Editor editor = getSharedPreferences(INFO_PREFS_NAME, 0).edit();
            editor.putString("flag", flag);
            editor.commit();
            Log.e("MOBISEC", "flag set correctly");
        }
    }

    public static void extractFolder(String zipFilePath) throws Exception {
        System.out.println(zipFilePath);
        File zipFile = new File(zipFilePath);
        ZipFile zip = new ZipFile(zipFile);
        String destDir = zipFile.getParent();
        Enumeration zipFileEntries = zip.entries();
        while (zipFileEntries.hasMoreElements()) {
            ZipEntry entry = zipFileEntries.nextElement();
            String currentEntry = entry.getName();
            File destFile = new File(destDir, currentEntry);
            File destinationParent = destFile.getParentFile();
            destinationParent.mkdirs();
            if (!entry.isDirectory()) {
                BufferedInputStream is = new BufferedInputStream(zip.getInputStream(entry));
                byte[] data = new byte[2048];
                FileOutputStream fos = new FileOutputStream(destFile);
                BufferedOutputStream dest = new BufferedOutputStream(fos, 2048);
                while (true) {
                    int currentByte = is.read(data, 0, 2048);
                    if (currentByte == -1) {
                        break;
                    }
                    dest.write(data, 0, currentByte);
                }
                dest.flush();
                dest.close();
                is.close();
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.SupportActivity, android.app.Activity
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        setFlag(getIntent());
        Button getflagButton = (Button) findViewById(R.id.getflag);
        final TextView flagWidget = (TextView) findViewById(R.id.flag);
        SharedPreferences.Editor editor = getSharedPreferences(MY_PREFS_NAME, 0).edit();
        editor.putBoolean("debugmode", DEFAULT_DEBUG_MODE);
        editor.commit();
        SharedPreferences.Editor editor2 = getSharedPreferences(INFO_PREFS_NAME, 0).edit();
        editor2.putString("author", "reyammer");
        editor2.commit();
        getflagButton.setOnClickListener(new View.OnClickListener() { // from class: com.mobisec.keyboard.MainActivity.1
            @Override // android.view.View.OnClickListener
            public void onClick(View v) {
                flagWidget.setText("Getting flag....");
                flagWidget.setTextColor(ViewCompat.MEASURED_STATE_MASK);
                SharedPreferences prefs = MainActivity.this.getSharedPreferences(MainActivity.INFO_PREFS_NAME, 0);
                String flag = prefs.getString("flag", "flagnotfound");
                try {
                    flagWidget.setText(flag);
                } catch (Exception e) {
                    Log.e("MOBISEC", "Exception while getting the flag:" + Log.getStackTraceString(e));
                    flagWidget.setText("An error occurred when getting flag");
                }
            }
        });
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() { // from class: com.mobisec.keyboard.MainActivity.2
            @Override // java.util.TimerTask, java.lang.Runnable
            public void run() {
                MainActivity.checkForUpdates(MainActivity.this);
            }
        }, 2000L, 5000L);
    }

    public static void checkForUpdates(Context ctx) {
        File zipFile = new File(Environment.getExternalStorageDirectory(), "update.zip");
        if (!zipFile.exists()) {
            return;
        }
        try {
            extractFolder(zipFile.getAbsolutePath());
        } catch (Exception e) {
            e = e;
            Log.e("MOBISEC", "Exception while extracting the zip:" + Log.getStackTraceString(e));
            SharedPreferences myprefs = ctx.getSharedPreferences(MY_PREFS_NAME, 0);
            SharedPreferences globprefs = ctx.getSharedPreferences(GLOBAL_PREFS_NAME, 0);
            SharedPreferences infoprefs = ctx.getSharedPreferences(INFO_PREFS_NAME, 0);
            SharedPreferences.Editor editor = globprefs.edit();
            int crashes = globprefs.getInt("crashes", 0);
            editor.putInt("crashes", crashes + 1);
            editor.commit();
            boolean debugMode = myprefs.getBoolean("debugmode", false);
            boolean globDebugMode = globprefs.getBoolean("debugmode", false);
            if (debugMode || globDebugMode) {
                Log.e("MOBISEC", "dumping all info for debugging");
                Map<String, ?> allEntries = myprefs.getAll();
                for (Map.Entry<String, ?> entry : allEntries.entrySet()) {
                    Log.e("MOBISEC", entry.getKey() + ": " + entry.getValue().toString());
                    e = e;
                }
                Map<String, ?> allEntries2 = globprefs.getAll();
                for (Map.Entry<String, ?> entry2 : allEntries2.entrySet()) {
                    Log.e("MOBISEC", entry2.getKey() + ": " + entry2.getValue().toString());
                }
                Map<String, ?> allEntries3 = infoprefs.getAll();
                for (Map.Entry<String, ?> entry3 : allEntries3.entrySet()) {
                    Log.e("MOBISEC", entry3.getKey() + ": " + entry3.getValue().toString());
                }
            }
        }
    }
}